<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourceCommon" />
    </bean>

    <!-- 首先定义抽象的abstractDao，其有一个jdbcTemplate属性，从而可以让继承的子类自动继承jdbcTemplate属性注入； -->
    <bean id="abstractDao" abstract="true">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="jdbcTemplateShare" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="shardingDataSource" />
    </bean>

    <!-- 首先定义抽象的abstractDao，其有一个jdbcTemplate属性，从而可以让继承的子类自动继承jdbcTemplate属性注入； -->
    <bean id="abstractShareDao" abstract="true">
        <property name="jdbcTemplate" ref="jdbcTemplateShare" />
    </bean>

    <bean id="fsDao" class="sharejdbc.FsDataDaoImpl" parent="abstractShareDao"/>
    <bean id="fsPkDao" class="sharejdbc.FsPkDataDaoImpl" parent="abstractShareDao"/>

    <!--<bean id="userDao" class="edu.shao.springJdbc.dao.impl.UserDaoImpl"-->
          <!--parent="abstractDao" />-->

    <!--<bean id="userService" class="edu.shao.springJdbc.service.impl.UserServiceImpl">-->
        <!--<property name="userDao" ref="userDao"></property>-->
    <!--</bean>-->

</beans>